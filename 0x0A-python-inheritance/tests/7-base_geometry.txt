>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

VALID CASES
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", 12**30)


>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

INVALID CASES
>>> bg.integer_validator("my_int", -1)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0

>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0

MISSING ARG <value>
>>> bg.integer_validator("my_int")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("my_int", "hey")
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer

>>> bg.integer_validator("float", 3.5)
Traceback (most recent call last):
    ...
TypeError: float must be an integer

>>> bg.integer_validator("float", -0)
Traceback (most recent call last):
    ...
ValueError: float must be greater than 0

>>> bg.integer_validator("list", [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: list must be an integer

>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
    ....
TypeError: bool must be an integer

>>> bg.integer_validator("None", None)
Traceback (most recent call last):
    ...
TypeError: None must be an integer

>>> bg.integer_validator("dic", {'a': 1})
Traceback (most recent call last):
    ...
TypeError: dic must be an integer

>>> bg.integer_validator("dic", (1,2,3))
Traceback (most recent call last):
    ...
TypeError: dic must be an integer

>>> bg.integer_validator("dic", {1,2,3})
Traceback (most recent call last):
    ...
TypeError: dic must be an integer

>>> bg.integer_validator("str", "7")
Traceback (most recent call last):
    ...
TypeError: str must be an integer

>>> bg.integer_validator(NULL)
Traceback (most recent call last):
    ...
NameError: name 'NULL' is not defined
